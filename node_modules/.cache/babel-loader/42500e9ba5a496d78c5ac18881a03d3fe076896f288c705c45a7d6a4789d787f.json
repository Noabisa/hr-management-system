{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'../App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmployeeForm=_ref=>{let{fetchEmployees}=_ref;const[employee,setEmployee]=useState({staffNumber:'',fullName:'',identityNumber:'',qualifications:[],position:'',salary:''});const[qualification,setQualification]=useState('');const[successMessage,setSuccessMessage]=useState('');const[errorMessage,setErrorMessage]=useState('');const[loading,setLoading]=useState(false);const handleChange=e=>{setEmployee({...employee,[e.target.name]:e.target.value});setErrorMessage('');// Clear error message on input change\n};const validateForm=()=>{if(employee.salary<=0){setErrorMessage('Salary must be a positive number.');return false;}return true;};const handleAddQualification=()=>{if(qualification){setEmployee(prevState=>({...prevState,qualifications:[...prevState.qualifications,qualification]}));setQualification('');// Clear the input after adding\nsetErrorMessage('');// Clear any error message\n}};const handleRemoveQualification=index=>{setEmployee(prevState=>({...prevState,qualifications:prevState.qualifications.filter((_,i)=>i!==index)}));};const handleSubmit=async e=>{e.preventDefault();if(!validateForm())return;// Validate form before submission\nsetLoading(true);// Set loading state\ntry{await axios.post('http://localhost:5002/api/employees',employee);setSuccessMessage('Employee added successfully!');fetchEmployees();// Refresh employee list\nsetEmployee({staffNumber:'',fullName:'',identityNumber:'',qualifications:[],position:'',salary:''});}catch(error){var _error$response,_error$response$data;console.error(error);const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Error adding employee.';setErrorMessage(message);// Set error message from server response\n}finally{setLoading(false);// Reset loading state\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"employee-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Employee\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{name:\"staffNumber\",value:employee.staffNumber,onChange:handleChange,placeholder:\"Staff Number\",required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"fullName\",value:employee.fullName,onChange:handleChange,placeholder:\"Full Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"identityNumber\",value:employee.identityNumber,onChange:handleChange,placeholder:\"Identity Number\",required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"position\",value:employee.position,onChange:handleChange,placeholder:\"Position\",required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"salary\",type:\"number\",value:employee.salary,onChange:handleChange,placeholder:\"Salary\",required:true}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:qualification,onChange:e=>setQualification(e.target.value),placeholder:\"Add Qualification\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleAddQualification,children:\"Add\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:employee.qualifications.map((qual,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[qual,/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleRemoveQualification(index),children:\"Remove\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Adding...':'Add Employee'})]}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:successMessage}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage})]});};export default EmployeeForm;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","EmployeeForm","_ref","fetchEmployees","employee","setEmployee","staffNumber","fullName","identityNumber","qualifications","position","salary","qualification","setQualification","successMessage","setSuccessMessage","errorMessage","setErrorMessage","loading","setLoading","handleChange","e","target","name","value","validateForm","handleAddQualification","prevState","handleRemoveQualification","index","filter","_","i","handleSubmit","preventDefault","post","error","_error$response","_error$response$data","console","message","response","data","className","children","onSubmit","onChange","placeholder","required","type","onClick","map","qual","disabled"],"sources":["C:/Users/user/OneDrive/Desktop/BSCSMY2S1/WebDesign/hr-management-system/src/components/EmployeeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css'; \r\n\r\nconst EmployeeForm = ({ fetchEmployees }) => {\r\n    const [employee, setEmployee] = useState({\r\n        staffNumber: '',\r\n        fullName: '',\r\n        identityNumber: '',\r\n        qualifications: [],\r\n        position: '',\r\n        salary: ''\r\n    });\r\n    const [qualification, setQualification] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        setEmployee({ ...employee, [e.target.name]: e.target.value });\r\n        setErrorMessage(''); // Clear error message on input change\r\n    };\r\n\r\n    const validateForm = () => {\r\n        if (employee.salary <= 0) {\r\n            setErrorMessage('Salary must be a positive number.');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleAddQualification = () => {\r\n        if (qualification) {\r\n            setEmployee(prevState => ({\r\n                ...prevState,\r\n                qualifications: [...prevState.qualifications, qualification]\r\n            }));\r\n            setQualification(''); // Clear the input after adding\r\n            setErrorMessage(''); // Clear any error message\r\n        }\r\n    };\r\n\r\n    const handleRemoveQualification = (index) => {\r\n        setEmployee(prevState => ({\r\n            ...prevState,\r\n            qualifications: prevState.qualifications.filter((_, i) => i !== index)\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!validateForm()) return; // Validate form before submission\r\n\r\n        setLoading(true); // Set loading state\r\n        try {\r\n            await axios.post('http://localhost:5002/api/employees', employee);\r\n            setSuccessMessage('Employee added successfully!');\r\n            fetchEmployees(); // Refresh employee list\r\n            setEmployee({\r\n                staffNumber: '',\r\n                fullName: '',\r\n                identityNumber: '',\r\n                qualifications: [],\r\n                position: '',\r\n                salary: ''\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n            const message = error.response?.data?.message || 'Error adding employee.';\r\n            setErrorMessage(message); // Set error message from server response\r\n        } finally {\r\n            setLoading(false); // Reset loading state\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"employee-form\"> \r\n            <h2>Add Employee</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    name=\"staffNumber\" \r\n                    value={employee.staffNumber} \r\n                    onChange={handleChange} \r\n                    placeholder=\"Staff Number\" \r\n                    required \r\n                />\r\n                <input \r\n                    name=\"fullName\" \r\n                    value={employee.fullName} \r\n                    onChange={handleChange} \r\n                    placeholder=\"Full Name\" \r\n                    required \r\n                />\r\n                <input \r\n                    name=\"identityNumber\" \r\n                    value={employee.identityNumber} \r\n                    onChange={handleChange} \r\n                    placeholder=\"Identity Number\" \r\n                    required \r\n                />\r\n                <input \r\n                    name=\"position\" \r\n                    value={employee.position} \r\n                    onChange={handleChange} \r\n                    placeholder=\"Position\" \r\n                    required \r\n                />\r\n                <input \r\n                    name=\"salary\" \r\n                    type=\"number\" \r\n                    value={employee.salary} \r\n                    onChange={handleChange} \r\n                    placeholder=\"Salary\" \r\n                    required \r\n                />\r\n                \r\n                <div>\r\n                    <input \r\n                        value={qualification} \r\n                        onChange={(e) => setQualification(e.target.value)} \r\n                        placeholder=\"Add Qualification\" \r\n                    />\r\n                    <button type=\"button\" onClick={handleAddQualification}>Add</button>\r\n                </div>\r\n                \r\n                <ul>\r\n                    {employee.qualifications.map((qual, index) => (\r\n                        <li key={index}>\r\n                            {qual}\r\n                            <button type=\"button\" onClick={() => handleRemoveQualification(index)}>Remove</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Adding...' : 'Add Employee'}\r\n                </button>\r\n            </form>\r\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}